steps:
  # clones project so it can be setup & tested
  # All steps after this must set working directory to use the cloned project source

  # $COMMIT_SHA is a default gcloud env var, to run via cloudbuild submit use:
  # gcloud builds submit --substitutions COMMIT_SHA=<commit sha>,REPO_NAME=solo-io/valet ./
  - name: 'gcr.io/$PROJECT_ID/prepare-go-workspace:0.3.0'
    args:
      - "--repo-name"
      - "$REPO_NAME"
      - "--repo-sha"
      - "$COMMIT_SHA"
      - "--repo-output-dir"
      - "."
    env:
      - 'GIT_SSH_CONFIG=FALSE'
    id: 'prepare-workspace'

  - name: gcr.io/cloud-builders/gsutil
    entrypoint: 'bash'
    args: ['-c', 'mkdir -p /go/pkg && cd /go/pkg && gsutil cat gs://$PROJECT_ID-cache/valet/valet-mod.tar.gz | tar -xzf -']
    dir: &dir '/workspace/valet'
    id: 'untar-mod-cache'

  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: ['-c', 'docker login quay.io --username "solo-io+solobot" --password $$QUAY_IO_PASSWORD']
    env:
      - 'DOCKER_CONFIG=/workspace/docker-config'
    secretEnv: ['QUAY_IO_PASSWORD']
    waitFor: ['-']
    id: 'docker-login'

  - name: 'gcr.io/$PROJECT_ID/go-mod-make:0.2.1'
    dir: *dir
    args: ['build']
    id: 'build'
    waitFor: ['prepare-workspace']

  - name: 'gcr.io/$PROJECT_ID/go-mod-ginkgo:0.2.0'
    dir: *dir
    env:
      - 'BUILD_ID=$BUILD_ID'
    args: ['-r', '-p', '-failFast', '-randomizeSuites', '-randomizeAllSpecs', '-skipPackage=./test,./cli']
    waitFor: ['prepare-workspace']
    id: 'test'

secrets:
  - kmsKeyName: projects/solo-public/locations/global/keyRings/build/cryptoKeys/build-key
    secretEnv:
      QUAY_IO_PASSWORD: CiQABlzmSRx5TcOqbldXa/d/+bkmAfpNAWa3PTS06WvuloZL+vASaQCCPGSGCogonVZVEUNx4G3YJtWi18gSuNx4PvLe08q8xAflTMFkjsyQirAOK3Y2oCvgYwiw/ITcuydjkpMjxDygFyENXS9FKFJoAXHlPQE5qidKr8xxmxF5ezhmjGB0gjyjXIIkbSEnBg==

timeout: 1800s